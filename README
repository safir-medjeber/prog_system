Pour compiler à la fois le modele client/serveur et le modele distribué:
     -> Lancé le makefile se trouvant à la racine du dossier



Pour tester le modele client/serveur
     -> se rendre dans le dossier Model_CS
     -> ./serveur
     	=> lance un serveur en attente de client
	=> fonctions disponibles sur le serveur:
	   -> boucle, plus, moins, multiplie, divise, concat
Puis
     -> toujours dans le dossier Model_CS mais dans un nouveau terminal
     -> ./client plus 2 2
        => Lance un client qui fait un appel externe à la fonction "plus" avec comme argument 2 et 2
	=> Voir test_model_CS pour d'autres exemples




Pour tester le modele distribué
     -> se rendre dans le dossier Model_D
     -> ./clientServeur sockName foncName [foncName2 .. foncName 5]
        sockName est le nom de la socket unix crée par le programme pour que d'autres clients/serveurs puissent le contacter
        foncName ... foncName 5 est le nom de la fonction que le serveur saura faire, il est a choisir entre "plus, moins, multiplie, divise".
        On peut donc donner jusqu'a 5 fonctions pour un client serveur donné.
    Puis
    -> il faut toujours mettre un espace apres avoir mis une parenthese, avoir saisi un operateur binaire ou avoir saisi un nombre,
        ne mettez aucun espace en trop au debut ou à la fin de l'opération.
        "1 + 3"
        "( 1 + 3 ) / 2"
        ->plus d'examples dans le fichier exempleDeCalcul.
    -> une fois fini vous vous détacher du segment mémoire en tapant exit.


